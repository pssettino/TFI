<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4RFORXhpZgAATU0AKgAAAAgABAE7AAIAAAAsAAAISodpAAQAAAAB
        AAAIdpydAAEAAABYAAAQ7uocAAcAAAgMAAAAPgAAAAAc6gAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFNFVFRJTk8s
        IFBBQkxPIEdBQlJJRUwgW0FHLUNvbnRyYWN0b3IvNTAwMF0AAAWQAwACAAAAFAAAEMSQBAACAAAAFAAA
        ENiSkQACAAAAAzU1AACSkgACAAAAAzU1AADqHAAHAAAIDAAACLgAAAAAHOoAAAAIAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAyMDE2OjA2OjA4IDE1OjE2OjMyADIwMTY6MDY6MDggMTU6MTY6MzIAAABTAEUAVABUAEkATgBPACwA
        IABQAEEAQgBMAE8AIABHAEEAQgBSAEkARQBMACAAWwBBAEcALQBDAG8AbgB0AHIAYQBjAHQAbwByAC8A
        NQAwADAAMABdAAAA/+ELPmh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8APD94cGFja2V0IGJlZ2lu
        PSfvu78nIGlkPSdXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQnPz4NCjx4OnhtcG1ldGEgeG1sbnM6eD0i
        YWRvYmU6bnM6bWV0YS8iPjxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5OS8w
        Mi8yMi1yZGYtc3ludGF4LW5zIyI+PHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9InV1aWQ6ZmFmNWJk
        ZDUtYmEzZC0xMWRhLWFkMzEtZDMzZDc1MTgyZjFiIiB4bWxuczpkYz0iaHR0cDovL3B1cmwub3JnL2Rj
        L2VsZW1lbnRzLzEuMS8iLz48cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0idXVpZDpmYWY1YmRkNS1i
        YTNkLTExZGEtYWQzMS1kMzNkNzUxODJmMWIiIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94
        YXAvMS4wLyI+PHhtcDpDcmVhdGVEYXRlPjIwMTYtMDYtMDhUMTU6MTY6MzIuNTQ3PC94bXA6Q3JlYXRl
        RGF0ZT48L3JkZjpEZXNjcmlwdGlvbj48cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0idXVpZDpmYWY1
        YmRkNS1iYTNkLTExZGEtYWQzMS1kMzNkNzUxODJmMWIiIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcv
        ZGMvZWxlbWVudHMvMS4xLyI+PGRjOmNyZWF0b3I+PHJkZjpTZXEgeG1sbnM6cmRmPSJodHRwOi8vd3d3
        LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj48cmRmOmxpPlNFVFRJTk8sIFBBQkxPIEdB
        QlJJRUwgW0FHLUNvbnRyYWN0b3IvNTAwMF08L3JkZjpsaT48L3JkZjpTZXE+DQoJCQk8L2RjOmNyZWF0
        b3I+PC9yZGY6RGVzY3JpcHRpb24+PC9yZGY6UkRGPjwveDp4bXBtZXRhPg0KICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAK
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8P3hwYWNr
        ZXQgZW5kPSd3Jz8+/9sAQwAHBQUGBQQHBgUGCAcHCAoRCwoJCQoVDxAMERgVGhkYFRgXGx4nIRsdJR0X
        GCIuIiUoKSssKxogLzMvKjInKisq/9sAQwEHCAgKCQoUCwsUKhwYHCoqKioqKioqKioqKioqKioqKioq
        KioqKioqKioqKioqKioqKioqKioqKioqKioqKioq/8AAEQgAhgB9AwEiAAIRAQMRAf/EAB8AAAEFAQEB
        AQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAEEQUSITFBBhNRYQci
        cRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVm
        Z2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV
        1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEBAQEAAAAAAAABAgMEBQYHCAkKC//E
        ALURAAIBAgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXETIjKBCBRCkaGxwQkjM1LwFWJy0QoWJDTh
        JfEXGBkaJicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKT
        lJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5
        +v/aAAwDAQACEQMRAD8A+kaKRnCDmmrluTQA+iioy+5tqc0ASUUAYrA1fxx4b0NimoatbrKpIMUZMjqf
        QquSPxpNpblwpzqO0Fd+Rv0V5rcfGzw/GW8iz1CcjodiKp/Etn9Kp/8AC+dLRsTaNeL/ALkinj9Kz9tT
        XU7VluLauoM9Worza1+OPhe5YLPHf2nq0sIYD/vlif0rr9G8XeH9ewuk6tbXEh6Rb9sn/fDYb9KqNSEt
        mYVMJXpK84NfI2qKRnCDmmrluTVnMPooqMvubanNAElFAGKKAIwm9tzdOwqSioXcu2yP8TQAO5dtkf4m
        ua8V+PdH8HQmKZvtV+wytpEfm9ix/hH6+gNYfxF+Iq+G0bSdEdX1Rl/ey4yLcH+beg7dTXhc88txM81x
        I8ssjFnd2LMxPUknqa5atfl92O572X5U6yVWtpHt3/4B03iX4i+IPEjOk92bW0bgWtsSikejHq34nHsK
        5UCgDPWlrhlJyd2fVU6UKceWCsgqrdf6wfSr1vbzXl1FbWsbSzSuEjRRksxOABXo0PwScWkc3iDxDa6Z
        K44iCBwPYsWXJ9hn604wlLZGdbFUaFvaStf+uh5LSglSCDgjkEV2/jD4Xap4VsP7RiuIdS07jM8IwUz0
        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
        0UUAOpG54oooAFUL0paKKAP/2Q==
</value>
  </data>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>